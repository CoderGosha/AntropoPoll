// <auto-generated />
using System;
using AntropoPollWebApi.Core.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AntropoPollWebApi.Core.Migrations
{
    [DbContext(typeof(AntropoPollContext))]
    [Migration("20200228123111_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("antropopoll")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AntropoPollWebApi.Core.Models.Answer", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BaseQuestionGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("QuestionGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("BaseQuestionGuid");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("AntropoPollWebApi.Core.Models.BaseQuestion", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("QuestionDiscriminator")
                        .HasColumnType("integer");

                    b.Property<int>("QuestionType")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.ToTable("Question");

                    b.HasDiscriminator<int>("QuestionDiscriminator");
                });

            modelBuilder.Entity("AntropoPollWebApi.Core.Models.ClosedQuestion", b =>
                {
                    b.HasBaseType("AntropoPollWebApi.Core.Models.BaseQuestion");

                    b.Property<int>("MaxCountСhoice")
                        .HasColumnType("integer");

                    b.Property<int>("MinCountСhoice")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("AntropoPollWebApi.Core.Models.Answer", b =>
                {
                    b.HasOne("AntropoPollWebApi.Core.Models.BaseQuestion", "BaseQuestion")
                        .WithMany("Answers")
                        .HasForeignKey("BaseQuestionGuid");
                });
#pragma warning restore 612, 618
        }
    }
}
